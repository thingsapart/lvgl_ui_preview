; PlatformIO Project Configuration File
;
; Please visit documentation for the other options and examples
; http://docs.platformio.org/page/projectconf.html

[platformio]
description            = ESP32-based visual CNC pendant
src_dir                = src
lib_dir                = lib
boards_dir             = boards
build_cache_dir        = .pio
extra_configs          = 

[base_config]
framework              = arduino
board_build.filesystem = littlefs
monitor_speed          = 115200
monitor_echo           = yes
check_skip_packages    = yes
lib_archive            = no
lib_ldf_mode           = chain
lib_compat_mode        = strict
shared_libdeps_dir     = lib
lib_extra_dirs         =

[base_config_native]
monitor_speed          = 115200
monitor_echo           = yes
check_skip_packages    = yes
lib_archive            = no
lib_ldf_mode           = chain
lib_compat_mode        = strict
shared_libdeps_dir     = lib
lib_extra_dirs         =

[pendant]
build_unflags          =
build_flags            = -I$PROJECT_DIR/include

[esp_release]
extra_scripts          = 
build_unflags          = ${pendant.build_unflags}
build_flags            = ${pendant.build_flags}
                        -D CORE_DEBUG_LEVEL=0
                        -Wno-deprecated-declarations
                        -mtarget-align
                        -free
                        -fipa-pta
                        -Wreturn-type

[esp32_release]
build_unflags          = ${esp_release.build_unflags}
                        -mtarget-align
                        -fexceptions
build_flags            = ${esp_release.build_flags}
                        -mno-target-align
                        -fno-exceptions
lib_ignore             =
extra_scripts          = ${esp_release.extra_scripts}
monitor_filters        = esp32_exception_decoder

[esp32_debug]
extends                = esp32_release
build_unflags          = ${esp32_release.build_flags}
                        -D CORE_DEBUG_LEVEL=0
                        -D LOG_LOCAL_LEVEL=0
build_flags            = ${esp32_release.build_flags}
                        ; -- logging --
                        -D CORE_DEBUG_LEVEL=5
                        -D LOG_LOCAL_LEVEL=5
                        -D PIOENV=\"${PIOENV}\"
                        -D LOG_MAXIMUM_LEVEL_VERBOSE
                        -D LOG_DEFAULT_LEVEL_WARNING
                        -D LOG_TIMESTAMP_SOURCE_SYSTEM
                        -D CONFIG_ARDUHAL_ESP_LOG=1
                        ; -DCONFIG_LOG_COLORS=1
check_tool             = cppcheck
check_flags            = --enable=all
debug_tool             = esp-prog
debug_init_break       = tbreak setup

[platform32]
platform               = https://github.com/tasmota/platform-espressif32/releases/download/2025.04.30/platform-espressif32.zip
platform_packages      =
build_unflags          = ${esp32_release.build_unflags}
build_flags            = ${esp32_release.build_flags}

[esp32_build]
extends                = esp32_debug

[flash_4mb]
board_upload.flash_size=4MB
board_upload.maximum_size = 4194304

[flash_8mb]
board_upload.flash_size=8MB
board_upload.maximum_size = 8388608

[flash_16mb]
board_upload.flash_size = 16MB
board                   = esp32s3_qio_opi
board_upload.maximum_size = 16777216

[env:pendant32_base]
platform                = ${platform32.platform}
platform_packages       = ${platform32.platform_packages}
board_build.filesystem  = ${base_config.board_build.filesystem}
board_upload.flash_size = 8MB
board                   = esp32
monitor_speed           = ${base_config.monitor_speed}
monitor_echo            = ${base_config.monitor_echo}
check_skip_packages     = ${base_config.check_skip_packages}
monitor_filters         = ${esp32_build.monitor_filters}
lib_ldf_mode            = ${base_config.lib_ldf_mode}
lib_compat_mode         = ${base_config.lib_compat_mode}
lib_extra_dirs          = ${base_config.lib_extra_dirs}
lib_ignore              = ${esp32_build.lib_ignore}
build_unflags           = ${esp32_build.build_unflags}
build_flags             = ${esp32_build.build_flags}
                            -Iinclude
                            -I${PROJECT_DIR}/src/
                            ;-ftrack-macro-expansion=0 ; to avoid very long macro errors when using lv_views.h Macro DSL
                            ; ESP32
                            -D ESP32_HW
                            -D ESP32_HW=1
                            -D BOARD_HAS_PSRAM
                            ; Arduino settings.
                            -D ARDUINO_LOOP_STACK_SIZE=10280
                            -D ARDUINO_USB_MODE=1
                            -D ARDUINO_RUNNING_CORE=1
                            -D ARDUINO_USB_MODE=1
                            -D ARDUINO_USB_CDC_ON_BOOT=1    
                            ; Version.
                            -D VER_MAJ=0
                            -D VER_MIN=0
                            -D VER_REV=1
                            ; LVGL.
                            -D LGFX_USE_V1=1
                            -D LV_CONF_INCLUDE_SIMPLE       ; for lvgl
                            -D LV_LVGL_H_INCLUDE_SIMPLE     ; for lv_drivers
                            -D LV_COMP_CONF_INCLUDE_SIMPLE  ; for components
                            ;-D LV_CONF_PATH="\"${PROJECT_DIR}/src/lv_conf.h>\"" 
                            ;-D LODEPNG_NO_COMPILE_ALLOCATORS ; use PSram functions
                            -D LV_PNG_USE_LV_FILESYSTEM=1   ; use lvgl filesystem api, drive L:\
                            -D LV_USE_FILESYSTEM=1
                            -D LITTLEFS=LittleFS
                            -D LV_USE_FS_ARDUINO_ESP_LITTLEFS=1     ; Use builtin Arduino LittleFS
                            ; -D SPIFFS_TEMPORAL_FD_CACHE     ; speedup opening recent files
board_build.f_cpu       = 240000000L
lib_deps                =
                            lovyan03/LovyanGFX
                            https://github.com/lvgl/lvgl
                            git+https://github.com/DaveGamble/cJSON.git
extra_scripts           =
                            ; pre:tools/auto_firmware_version.py
                            ; pre:tools/data_img_png_to_c.py -- disabled for now, does not support RBG565A8 eg
                            tools/littlefsbuilder.py
                            tools/esp_merge_bin.py
                            tools/analyze_elf.py

[env:display32]
framework               = arduino
extends                 = env:pendant32_base
build_flags             = ${env:pendant32_base.build_flags}
                          -D PENDANT_DISPLAY

[env:display32c3]
extends                 = env:display32
board                   = esp32c3
build_flags             = ${env:display32.build_flags}
lib_ignore              = ${env:display32.lib_ignore}

[env:display32s3]
extends                 = env:display32
board                   = esp32s3_qio_qspi
build_flags             = ${env:display32.build_flags}
                            -D ARDUINO_ESP32S3_DEV
lib_ignore              = ${env:display32.lib_ignore}

[env:display32p4]
extends                 = env:display32
board                   = esp32p4
build_flags             = ${env:display32.build_flags}
                            -D ARDUINO_ESP32P4_DEV
lib_ignore              = ${env:display32.lib_ignore}

[env:hub32]
framework               = arduino
extends                 = env:pendant32_base
build_flags             = ${env:pendant32_base.build_flags}
                            -D ESP_NOW_HUB

[env:hub32s3]
extends                 = env:hub32
build_flags             = ${env:hub32.build_flags}
                            -D ESP_NOW_HUB
                            -D ARDUINO_ESP32S3_DEV
                            -D MACH_UART_PIN_TX=17
                            -D MACH_UART_PIN_RX=18

[env:hub-esp32s3-devkit_16mb]
extends                 = env:hub32s3, flash_16mb

[env:hub-esp32s3-devkit_8mb]
extends                 = env:hub32s3, flash_16mb

[env:display-guition-4848s040]
extends                 = env:display32s3
board                   = esp32s3_4848s040
build_flags             = ${env:display32s3.build_flags}
                            -D ESP32_PARALLEL=1
                            -D ST7796_DRIVER=1
                            -D TOUCH_DRIVER=0x6336
                            -D TFT_WIDTH=480
                            -D TFT_HEIGHT=480
                            -D SPI_FREQUENCY=20000000
                            -D I2C_TOUCH_FREQUENCY=400000
                            -D I2C_TOUCH_ADDRESS=0x38
                            -D I2C_TOUCH_PORT=1
                            -D TOUCH_SDA=6
                            -D TOUCH_SCL=5
                            -D ENCODER_PIN_X=11
                            -D ENCODER_PIN_Y=10
                            -D LV_COLOR_16_SWAP=0
                            -D GUITION_4848S040=1
                            -D LED_PIN=16
                            ; Serial:
                            ; Break USB Serial, make RRF serial work:
                            ;-D MACH_UART_PIN_TX=43
                            ;-D MACH_UART_PIN_RX=44
                            ; Break RRF, make USB serial work:
                            -D MACH_UART_PIN_TX=2
                            -D MACH_UART_PIN_RX=1
                            -D USB_UART_PIN_TX=43
                            -D USB_UART_PIN_RX=44
upload_speed            = 460800


[env:display-wt32-sc01-plus]
extends                 = env:display32s3
board                   = esp32s3_qio_qspi
build_flags             = ${env:display32s3.build_flags}
                            -D ESP32_PARALLEL=1
                            -D LGFX_USE_V1=1
                            -D ST7796_DRIVER=1
                            -D TOUCH_DRIVER=0x6336
                            -D TFT_WIDTH=480
                            -D TFT_HEIGHT=320
                            -D SPI_FREQUENCY=20000000
                            -D TFT_RD=-1
                            -D TFT_WR=47
                            -D TFT_RS=0
                            -D TFT_D0=9
                            -D TFT_D1=46
                            -D TFT_D2=3
                            -D TFT_D3=8
                            -D TFT_D4=18
                            -D TFT_D5=17
                            -D TFT_D6=16
                            -D TFT_D7=15
                            -D TFT_CS=-1
                            -D TFT_RST=4
                            -D TFT_BUSY=-1
                            -D TFT_BCKL=45
                            -D I2C_TOUCH_FREQUENCY=400000
                            -D I2C_TOUCH_ADDRESS=0x38
                            -D I2C_TOUCH_PORT=1
                            -D TOUCH_SDA=6
                            -D TOUCH_SCL=5
                            -D ENCODER_PIN_X=11
                            -D ENCODER_PIN_Y=10
                            -D MACH_UART_PIN_TX=43
                            -D MACH_UART_PIN_RX=44
                            -D LV_COLOR_16_SWAP=0
                            -D WT32_SC01_PLUS=1
                            
upload_speed            = 921600

[env:display-jc1060p470]
; https://github.com/esp-arduino-libs/ESP32_Display_Panel
; https://github.com/espressif/esp-idf/tree/master/examples/peripherals/lcd/mipi_dsi
; https://docs.espressif.com/projects/esp-idf/en/latest/esp32p4/api-reference/peripherals/lcd/dsi_lcd.html
; https://github.com/moononournation/Arduino_GFX/commit/8e9e421c6c87e76ec2fa70b9b5d0fffa68cb8091
; avoid tearing: https://github.com/espressif/esp-iot-solution/tree/4aca00fb04dd6e86d14a62d62d2e0f22f0e53eb5/examples/display/lcd/mipi_dsi_avoid_tearing
extends                 = env:display32p4
board                   = esp32p4
build_flags             = ${env:display32p4.build_flags}
                            -D ESP32_PARALLEL=1
                            -D LGFX_USE_V1=1
                            -D ST7796_DRIVER=1
                            -D TOUCH_DRIVER=0x6336
                            -D TFT_WIDTH=480
                            -D TFT_HEIGHT=320
                            -D SPI_FREQUENCY=20000000
                            -D TFT_RD=-1
                            -D TFT_WR=47
                            -D TFT_RS=0
                            -D TFT_D0=9
                            -D TFT_D1=46
                            -D TFT_D2=3
                            -D TFT_D3=8
                            -D TFT_D4=18
                            -D TFT_D5=17
                            -D TFT_D6=16
                            -D TFT_D7=15
                            -D TFT_CS=-1
                            -D TFT_RST=4
                            -D TFT_BUSY=-1
                            -D TFT_BCKL=45
                            -D I2C_TOUCH_FREQUENCY=400000
                            -D I2C_TOUCH_ADDRESS=0x38
                            -D I2C_TOUCH_PORT=1
                            -D TOUCH_SDA=6
                            -D TOUCH_SCL=5
                            -D ENCODER_PIN_X=11
                            -D ENCODER_PIN_Y=10
                            -D MACH_UART_PIN_TX=43
                            -D MACH_UART_PIN_RX=44
                            -D LV_COLOR_16_SWAP=0
                            -D WT32_SC01_PLUS=1
                            
upload_speed            = 921600

[env:display-emulator-64bits]
extends                 = env:base_config_native
lib_deps                = https://github.com/lvgl/lvgl
                            git+https://github.com/DaveGamble/cJSON.git
build_type              = debug
platform                = native
extra_scripts           = pre:tools/sdl2_paths.py ; Tries to find SDL2 include and lib paths on your system - specifically for MacOS w/ Homebrew
                            post:tools/sdl2_build_extra.py
build_src_filter        = +<*>
                          -<ui/gen_views/*>
build_unflags           = ${env:pendant32_base.build_unflags}
                            -mtarget-align
                            -fipa-pta
                            -free
                            -mno-target-align
                            -D ESP32_HW
                            -D ESP32_HW=1
                            -DBOARD_HAS_PSRAM
                            ; Arduino settings.
                            -D ARDUINO_LOOP_STACK_SIZE=10280
                            -D ARDUINO_USB_MODE=1
                            -D ARDUINO_RUNNING_CORE=1
                            -D ARDUINO_USB_MODE=1
                            -D ARDUINO_USB_CDC_ON_BOOT=1    
                            -D LV_USE_FS_ARDUINO_ESP_LITTLEFS=1 
build_flags             = ${env:pendant32_base.build_flags}
                            ;-D LV_LOG_LEVEL=LV_LOG_LEVEL_INFO
                            -D LV_LOG_PRINTF=1
                            -lSDL2
                            -lpng
                            -D POSIX
                            -I /opt/homebrew/include/
                            -L /opt/homebrew/lib/
                            -Og
                            -g
                            ; SDL drivers options
                            -D LV_LVGL_H_INCLUDE_SIMPLE
                            -D LV_DRV_NO_CONF
                            -D LV_USE_FS_POSIX=1
                            -D LV_USE_SDL
                            -D SDL_HOR_RES=480
                            -D SDL_VER_RES=320  
                            -D SDL_ZOOM=1
                            -D LV_SDL_INCLUDE_PATH="\"SDL2/SDL.h\""
                            ; LVGL memory options, setup for the demo to run properly
                            -D LV_MEM_CUSTOM=1
                            -D LV_MEM_SIZE="(128U * 1024U)"

[env:generate-ui-component-impls]
extends                 = env:display-emulator-64bits
build_src_filter        = -<**/*.c>
                            +<ui/components/*.def.h>
extra_scripts           = pre:tools/gen_views.py 


[base_config_ui_send]
monitor_speed          = 115200
monitor_echo           = yes
check_skip_packages    = yes
lib_archive            = no
lib_ldf_mode           = chain
lib_compat_mode        = strict
shared_libdeps_dir     = lib
lib_extra_dirs         =

[env:gen-send-ui]
extends                 = env:base_config_ui_send
lib_deps                =  git+https://github.com/DaveGamble/cJSON.git
build_type              = debug
platform                = native
extra_scripts           = pre:tools/gen_views.py 
build_src_filter        = -<*>
                         +<../src_builder>
                         +<ui/gen_views/*>
build_unflags           = 
build_flags             = ;-D LV_LOG_LEVEL=LV_LOG_LEVEL_INFO
                            -I src_builder
                            -I src
                            -D POSIX
                            -D DEBUG
                            -Og
                            -g
                            ; SDL drivers options
                            -D LV_LVGL_H_INCLUDE_SIMPLE
                            -D LV_USE_SDL
                            -D SDL_HOR_RES=480
                            -D SDL_VER_RES=320  
